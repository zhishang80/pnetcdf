------------------------------------------------------------------------------
This is essentially a placeholder for the next release note ...
------------------------------------------------------------------------------

  o New features
    * The configure environment has been migrated to use GNU automake and
      libtool.
    * Building shared libraries is now supported with configure option
      --enable-shared. The default is building static library only. Note
      linking shared libraries is not recommended due to the likely performance
      degradation.

  o New Limitations
    * PnetCDF now requires the underlying MPI library define data type
      MPI_Offset to be an 8-byte integer. Configuring process of PnetCDF will
      be aborted if MPI_Offset is detected to be of size 4 bytes. See r2944.
    * The maximum number of files that can be simultaneously opened by an MPI
      process is now limited to 1024 (a new constant NC_MAX_NFILES defined in
      pnetcdf.h). When this limit is reached, error code NC_ENFILE will be
      thrown.
    * NC_MAX_VAR_DIMS, the maximum number of dimensions per variable is lifted
      to 2147483647, i.e. NC_MAX_INT
    * NC_MAX_DIMS, the maximum number of dimensions per file is lifted to
      2147483647, i.e. NC_MAX_INT
    * NC_MAX_ATTRS, the maximum number of attributes per file is lifted to
      2147483647, i.e. NC_MAX_INT
    * NC_MAX_VARS, the maximum number of variables per file is lifted to
      2147483647, i.e. NC_MAX_INT

  o New constants
    * NC_FORMAT_UNKNOWN, NF_FORMAT_UNKNOWN, and NF90_FORMAT_UNKNOWN are new
      constants that are one of the returned values of argument formatp in the
      API ncmpi_inq_file_format when the file under inquiry is unrecognizable
      by PnetCDF library.
    * NC_MAX_NFILES, NF_MAX_NFILES, and NF90_MAX_NFILES define the maximum
      number of files that can be kept opened by an MPI process.

  o New APIs
    * none

  o New optimization
    * Use hash function for faster attribute name lookup. See r3335.

  o Syntax changes
    * Add C type qualifier "const" to argument fill_value of ncmpi_def_var_fill
      to indicate the contents pointed by fill_value is immutable.

  o Semantics updates
    * For CDF-5 files, the maximum size of a variable or a variable's record
      is NC_MAX_INT64-3.
    * When the file create/open modes are not consistent among processes, the
      modes will be replaced by rank 0's mode and PnetCDF library will still
      try to create/open the file. Error code NC_EMULTIDEFINE_CMODE or
      NC_EMULTIDEFINE_OMODE will be returned on processes whose modes disagree
      with rank 0's. If safe mode is on, then rank 0 will also get the error
      code.

  o New utility program
    * none

  o New error code precedence
    * none

  o New error code
    * none

  o New PnetCDF hint
    * none

  o New run-time environment variables
    * none

  o New example programs
    * none

  o New programs for I/O benchmarks
    * none

  o New build recipe
    * doc/README.Ubuntu provides build instructions for Ubuntu Linux OS.

  o New test program
    * test/largefile/tst_cdf5_begin.c - to test whether a CDF-5 file header is
      corrupted.
    * test/testcases/tst_open_cdf5.c - to test whether NC_ENOTNC is thrown
      when opening a CDF-5 (bad_begin.nc5) file with corrupted header.
    * test/testcases/large_var_cdf5.c - to test whether NC_EVARSIZE is thrown
      when a variable or a record is larger than NC_MAX_INT64-3.
    * test/testcases/mix_collectives.c - to test collective get/put APIs that
      allow different processes to call different kinds of APIs (i.e. var1,
      vara, vars, varm, etc.) and use different var IDs. In other words, the
      API kinds can be different among processes in a collective call.
    * test/largefile/high_dim_var.c - tests blocking vars APIs for high-
      dimensional variables. This is to test r3164.
    * test/largefile/large_dims_vars_attrs.c - tests large values of number of
      dimensions, large number of variables, and large number of attributes.
    * test/testcases/put_all_kinds.m4 - tests various blocking put APIs.
    * test/testcases/tst_dimsizes.c - borrowed from NetCDF library to test
      define/inquire the maximum allowable dimension sizes. This test program
      is similar to (or a subset of) test/cdf_format/dim_cdf12.c
    * test/testcases/null_args.c - tests whether the correct error codes can
      be returned when using NULL arguments for start, count, stride, or imap

  o Conformity with NetCDF library
    * API ncmpi_open now checks the number of large variables that is legal
      for CDF-1 and CDF-2 files. See r2961. For the information about the
      number of large variables allowed in the classic formats can be found in
      http://www.unidata.ucar.edu/software/netcdf/docs/file_structure_and_performance.html#classic_format_limitations
    * Add checking for error code NC_ELATEFILL. Setting a variable's attribute
      _FillValue must be done in the variable's initial define mode.
    * NetCDF-4 documents in 4.4.1 and prior state that setting attribute
      _FillValue for global variable NC_GLOBAL is not allowed and error code
      NC_EINVAL will be thrown. Revisions r2954, r2955, and r2956 enforce this
      rule. However, because the rule has never been implemented in any NetCDF
      official release, NetCDF developers have decided to abandon this rule
      by revising the NetCDF document starting from v4.5. See discussion in
      NetCDF GitHub pull request 458. To be consistent with NetCDF, PnetCDF
      follows the same decision by wrapping the checking with preprocessor
      conditional #ifdef NO_NC_GLOBAL_FILLVALUE (see r3403). Note NC_EGLOBAL
      will be thrown when using NC_GLOBAL in ncmpi_def_var_fill(). This is
      due to no data type information for the fill value can be passed.
    * From the releases of 1.6.1 through 1.8.1, putting attribute _FillValue
      automatically turns on the fill mode for the variable. Similarly,
      deleting attribute _FillValue turns off the fill mode. However, this
      behavior does not conform with NetCDF library. This release fixes this
      inconsistency, so putting or deleting attribute _FillValue does not
      affect a variable's fill mode. See r2951.

  o Issues related to MPI library vendors:
    * When using OpenMPI 2.1.1 and priors built with Intel compilers 17.0.0,
      the test program nonblocking/mcoll_testf.f90 fails with segmentation
      fault. This is due to a bug in OpenMPI. See discussion in
      https://github.com/open-mpi/ompi/issues/3695
    * OpenMPI versions 2.0.2 and 1.10.6 on 32-bit machines configure data type
      MPI_Offset as a 4-byte integer, even if the 32-bit machines support large
      files. See the discussion thread in OpenMPI:
      https://github.com/open-mpi/ompi/issues/3195
      We suggest to use other MPI libraries to build PnetCDF on 32-bit machines.
    * Fix test program test/nc_test/test_read.m4 and test/testcases/modes.c for
      testing whether the correct error codes can be returned when opening a
      non-existing file. Thanks to Mark Dixon for testing various MPI
      implementations, compilers, and file systems, we found that when using
      MVAPICH2 2.2, its Lustre driver always adds O_CREAT flag to the open()
      calls. Because of this behavior, the non-existing file will be created
      with zero length, which causes PnetCDF to spew NC_ENOTNC instead of
      NC_ENOENT. A bug report has been filed to MVAPICH. The fix shall come in
      the next release of MVAPICH. The bug report can be found in
      http://mailman.cse.ohio-state.edu/pipermail/mvapich-discuss/2017-February/006300.html

  o Other updates:
    * Add quiet mode command-line option "-q" to utility program ncmpivalid.
    * Add an internal check for whether the file starting offsets of all
      variables are in an increasing order as the variables defines. See r3369.
    * All build recipes (README files) have been moved to folder doc. Most of
      the recipes have been updated with instructions for building shared
      libraries.
    * Rename configure-time variables TEST_SEQRUN, TEST_MPIRUN, and TEST_OUTDIR
      to TESTSEQRUN, TESTMPIRUN, and TESTOUTDIR, respectively. This change
      avoids conflict to the name convention reserved by automake.
    * Fix TESTMPIRUN default value to use full path specified in --with-mpi at
      configure command line

  o Bug fixes
    * Fix the bug of nonblocking APIs for the case one request whose access
      region covers more than one other non-interleaved requests. The bug fails
      to identify them a single group of interleaved requests. See r3389 and
      revised test program test/nonblocking/interleaved.c to test the fix.
    * Fix the bug of string parsing the environment variable PNETCDF_HINTS and
      print warning messages for ill-formed hint strings. See r3284.
    * Fix F90 APIs for reading and writing scalar variables, i.e. number of
      dimensions is zero. The bugs appear only when using Intel Fortran
      compiler which does not allow checking presence of an argument and
      its contents in the same if condition. See r3009, r3012, r3013.
    * Conform with CDF-2 file format specification on using 2^32-1 for vsize
      when the variable size is larger than 23^2-4 bytes. See r2957.
    * Fix nc_test when running on an ARMv7 architecture, a raspberry pi, where
      char is unsigned and which is little Endian, 32-bit machine. See r2922.
    * Fix the missing byte-swap required for retrieving user-defined fill
      values. See r2864. This fix is critical when PnetCDF is configured with
      option erange-fill enabled (default mode) and the target platform is a
      Little Endian.

